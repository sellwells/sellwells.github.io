{"./":{"url":"./","title":"Introduction","keywords":"","body":"© snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 09:35:20 "},"doc/1.项目介绍.html":{"url":"doc/1.项目介绍.html","title":"项目介绍","keywords":"","body":"B2B2C商城系统 欢迎交流需求，交流业务，交流技术（基础问题自行解决，其他问题先看文档后提问） 不用削尖脑袋往老群里加，老群活跃度较低，很多潜水党，新群相对而言活跃一些 :tw-1f606: :tw-1f606: :tw-1f606: :tw-1f606: :tw-1f606: :tw-1f606: PS： 演示站点所有环境均部署master分支。如果有演示站点问题，可以反馈，如果演示站点没问题本地运行有问题，需自行处理 体验 公众号/小程序/APP 体验，扫描二维码 商城介绍 官网：https://sellwell.cn sellwell商城系统支持商家入驻，后端基于SpringBoot 研发，前端使用 Vue、uniapp开发， 系统全端全部代码开源 前后端分离，支持分布式部署，支持Docker，各个API独立，并且有独立的消费者。 商城 API/消费者 聚合版 api不需要单独部署，只需启动一个jar包就可以正常运转 如有需要，可以点击跳转 https://gitee.com/beijing_sellwell/sellwell-simplify 开发/使用/常见问题 帮助文档 https://docs.sellwell.cn 项目地址 gitee : https://gitee.com/beijing_sellwell github 镜像: https://github.com/sellwell?tab=repositories 商城UI 项目下3个文件夹 buyer：买家PC端，seller：商家端，manager：后台管理端 演示地址 PS：手机验证码为 ‘111111’ 平台管理端：https://admin-b2b2c.sellwell.cn 账号：admin/123456 店铺管理端：https://store-b2b2c.sellwell.cn 账号：13011111111/111111 商城PC页面：https://pc-b2b2c.sellwell.cn 商城 小程序/公众号/APP：扫描二维码 快速本地部署 点击跳转 商城数据库 使用docker-compose部署数据库，自动初始化数据库，不需要手动下载等操作 如果手动部署，才需要获取sql 点击跳转 （PS：这里有与tag版本一致的sql，如果是历史版本，则docker项目也切换至历史版本获取sql即可，历史版本升级则根据java相聚的根目录DB目录下的升级sql，按需执行）。 功能列表 平台管理端功能 卖家功能 商城前端功能展示 商城移动端 平台管理端 技术选型 架构图 后台技术选型 说明 框架 说明 基础框架 Spring Boot MVC框架 Spring MVC 持久框架 Mybatis-Plus 程序构建 Maven 关系型数据库 MySQL 消息中间件AMQP RocketMQ 缓存 Redis +MongoDB 搜索引擎 Elasticsearch 安全框架 Spring Security 数据库连接池 Druid 数据库分库分表 sharding 定时任务 xxl-job 负载均衡 Nginx 静态资源 阿里云OSS 短信 阿里云短信 认证 JWT 日志处理 Log4j 接口规范 RESTful 前端-运营后台、店铺后台 说明 框架 说明 框架 构建工具 webpack JS版本 ES6 基础JS框架 Vue.js 视频播放器 Dplayer 路由管理 Vue Router 状态管理 Vuex 基础UI库 iView UI界面基于 iView 网络请求 axios 前端-移动端 说明 架构 说明 架构 基础UI库 uViewui 基础框架 uni-app CSS预处理 scss 地图引擎 amap 版本升级 系统后续会提供多场景解决方案。 更多架构：微服务、Saas、中台等，都会支持。 支持差价升级商业授权 Copy 商业授权 商业版本与开源版本代码一致，没有区分 商业使用需要授权，授权方式可选择联系官网客服，或者qq群联系群主。 商业授权模式为永久授权，支持永久升级。 商业案例由于涉及部分多层二开关系，如需了解可以咨询销售。 开源须知 1.仅允许用于个人学习研究使用. 2.禁止将本开源的代码和资源进行任何形式任何名义的出售. 3.软件受国家计算机软件著作权保护（登记号：2029SR89028902）。 4.限制商用，如果需要商业使用请联系我们。QQ202920292029.或者加入qq群联系群主。 交流群 附录 有人有自己的学习视频、学习记录文档、希望宣传关联开源项目等均可以私聊仓库所有者。 类似： 清晨敲代码同学的分析: https://blog.csdn.net/vaevaevae233/category_12103567.html © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:08:33 "},"doc/2.常见问题.html":{"url":"doc/2.常见问题.html","title":"常见问题","keywords":"","body":"解决问题究极方法 将报错信息最根源的问题，放到百度/谷歌/bing 等网站，进行简单的搜索，可以解决百分之80的问题。 后端如何配置各种链接 本地运行时，更改根目录的 config目录下的 application.yml。 jar包运行时更改项目内resource目录下的application.yml。 前端如何配置API buyer/public/config.js seller/public/config.js manager/public/config.js 配置对应的api_dev/api_prod即可， api_dev，本地运行，例如yarn run dev这类型时读取。 api_prod 编译运行，例如yarn build 之后的项目，api读取api_prod中的配置文件。 H5 如何配置api 根目录/config/api.js dev，本地运行，例如yarn run dev这类型时读取。 prod 编译运行，例如yarn build 之后的项目，api读取api_prod中的配置文件。 功能限制，提示 演示站点禁止使用 配置文件配置中 lili.system.isDemoSite 为true时，系统部分功能限制，会出现这个提示。 第一次部署之后商品无法搜索 商品索引初始化位于 管理端=》系统设置=〉商品设置 ，点击重制商品索引，es目前官方使用7.3版本，且需要配置IK分词器，如果需要单独部署，注意版本兼容以及分词器问题处理。 URI [/lili_goods/_search?]\\[attrList] is not nested Elasticsearch exception [type=search_phase_execution_exception, reason=all shards failed]; nested exception is ElasticsearchStatusException[Elasticsearch exception [type=search_phase_execution_exception, reason=all shards failed]] 默认es索引mapping结构不对，执行索引初始化即可，商品索引初始化位于 管理端=》系统设置=〉商品设置 ，点击重制商品索引。 PS：注意es版本，目前演示站点7.3.x 其他版本如果出现问题自行解决兼容性问题。 自定义es分词无效 检查ik分词器的配置文件IKAnalyzer.cfg.xml中配置的api地址是否正确。 如使用的是docker compose一键部署，则路径在config/ik/config/IKAnalyzer.cfg.xml。 如使用的是自己安装的，则修改自己安装的ik分词器的配置文件。 管理端=》运营=》es分词 设置es自定义分词，设置完成后。需要重新生成相应商品索引，才会在搜索时生效。 ES内存不足 可以调整jvm启动参数，如使用的部署项目的docker-compose部署，则可以直接修改docker-compose文件里的启动参数，如 ... environment: cluster.name: elasticsearch discovery.type: single-node ES_JAVA_OPTS: -Xms256m -Xmx256m logging: driver: \"json-file\" options: max-size: \"50m\" ... Copy 已付款订单无法发货，状态为已付款 订单状态变成“代发货”，需要消费者服务启动（consumer），注意MQ是否异常。如果一切状态正确，订单会进入到代发货状态或者是取消状态。（为取消，则表示因为库存不足，或者促销活动库存不足问题）. SQL在哪里 点击跳转 https://gitee.com/beijing_sellwell/docker/tree/master/init/mysql 这里有与tag版本一致的sql，根据tag获取sql，如果使用master代码，则需要在sellwell项目根目录的update-sql目录中，获取对应的升级sql。 Unknown collation: 'utf8mb4_0900_ai_ci' 数据库版本不对，需要数据库8.x或者自行调整数据库中的字符集（直接将错误发百度，很多答案）。 短信功能问题 配置文件配置中 lili.system.isTestModel 为true时，系统不会真的发送短信，验证码默认为6个1。 如果想真实发短信，配置文件位置为：阿里云短信配置 移动端启动报错 小程序直播插件报错 在manifest中 删除代码。 Docker镜像端口号如何设置 群友反馈端口号没有映射，无法访问。 解释这个问题需要先了解docker 的网络模式的区别： 安装Docker时，它会自动创建三个网络，bridge（创建容器默认连接到此网络）、 none 、host host：容器将不会虚拟出自己的网卡，配置自己的IP等，而是使用宿主机的IP和端口。 Container：创建的容器不会创建自己的网卡，配置自己的IP，而是和一个指定的容器共享IP、端口范围。 None：该模式关闭了容器的网络功能。 Bridge：此模式会为每一个容器分配、设置IP等，并将容器连接到一个docker0虚拟网桥，通过docker0网桥以及Iptables nat表配置与宿主机通信。 完整的解释https://www.cnblogs.com/zuxing/articles/8780661.html 示例中应用的镜像脚本，网络模型都是host，所以它采用的是宿主机的端口，所以无法看到映射内容。 Docker API 没有dockerfile如何打包？ 使用的是maven打包插件，执行命令即可 mvn clean package docker:build -DskipTests -DpushImage Copy 密码能否手动设置 前端交互时，已经对密码进行md5处理，在后端接收方，会进行二次加密，所以如果需要手动设置密码，需要经过两次加密后写在数据库才可以。 xxljob干嘛用的 定时任务定时调度，不启动不会报错，但是会影响定时任务，例如商品评分店铺评分。 rocketmq 干嘛用的 消息队列，即把一部分任务放在一个地方排序，让消费者去顺序消费。可以让一些场景不被卡住，例如下单场景，可以先下单成功，并发下单不会卡死，让用户的请求被卡住。 数据库模型 id是什么时候写入的 查看此类 cn.lili.base.mybatisplus.MyMetaObjectHandler，简单来说就是在数据库实际操作前，会对对象进行二次操作，比如判定没有id则写入id，有id则不覆盖这样的逻辑。 配置文件问题 springboot jar包运行时，默认加载项目中的配置文件，同时扫描运行目录的config目录，如果有配置文件，会覆盖项目中原有的配置文件。 属性覆盖 例如项目resource目录下，有个配置文件中配置 lili.system.isDemoSite 为 true 项目根目录有config文件夹，里边有文件application.yml，配置信息中 lili.system.isDemoSite 为false，则项目启动时加载的信息为false。 属性叠加 项目resource目录下，有配置文件，配置了项目端口号。根目录也有配置文件中，没有配置运行端口号，则还按照项目中的配置的端口号去运行。 MINIO部署配置 点击查看 swagger-ui.html无法打开 项目访问 doc.html 即可，使用到了一个ui具体详情可以自行研究。 IM 在哪儿 过渡阶段IM开源地址 https://gitee.com/beijing_sellwell/springboot-websocket 参照readme部署即可，注意数据库需要额外导入以及ws链接的配置 商业授权模式 商业授权，代码没有不同的地方，商业授权只是一致合同协议，未被商业授权进行商业运营，会有律师函送到。商业授权费用很低，只是作为引流的手段。 商业使用问题，授权问题 联系QQ(800181125)即可 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/issue/2024.html":{"url":"doc/issue/2024.html","title":"修复问题","keywords":"","body":"PC mall 商品分类展示不全 未修复 商家端 商品品牌无法展示 未修复 平台端 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-03-05 20:52:22 "},"doc/部署文档/部署准备.html":{"url":"doc/部署文档/部署准备.html","title":"部署准备","keywords":"","body":"运行准备 上线准备 一套完整的域名（PC端、移动端、商家端、管理端、以及4个API端） ssl证书 域名备案 支付宝支付参数 微信支付参数 微信联合登陆参数 阿里云OSS参数 阿里云短信参数 快递鸟物流查询参数 最低服务器配置 2核16G内存服务器一台（推荐使用 CentOS 7.6 64位）（如果基础中间件使用外部服务器的，则可以适量减少内存） 环境准备 jdk >= 1.8 Mysql 8.x.x Redis >= 6.2.5 elasticsearch >= 7.3.0 需要IK分词器 rocket-server >= 4.7.0 xxl-job >= 2.3.0 Copy 以上环境为演示站点环境，尽可能使用同一版本 xxljob默认用户密码为: admin/111111 docker-compose环境安装（如果自行部署基础中间件，则可以略过这里，这里主要安装基础中间件） 安装docker-compose环境(已经安装的可以略过) #安装git sudo yum install -y git #安装maven sudo yum install -y maven #安装依赖 sudo yum install -y yum-utils device-mapper-persistent-data lvm2 #设置源 sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo sudo yum makecache fast #安装docker sudo yum install -y docker-ce #启动服务 sudo systemctl start docker #安装docker-compose curl -L https://github.com/docker/compose/releases/download/v2.17.1/docker-compose-linux-x86_64 > /usr/local/bin/docker-compose #授权 sudo chmod +x /usr/local/bin/docker-compose #检测版本号 docker-compose -v Copy docker脚本下载 git clone https://gitee.com/beijing_sellwell/docker.git Copy Rocketmq 需要特殊配制一下节点ip 在 config/broker.conf 文件中，将brokerIP1修改为部署docker的局域网ip 运行脚本（第一行为部署环境包括Mysql、mq、redis、xxljob等所有中间件） 必须保证es本地挂载目录权限为 777 否则es启动不成功。默认es本地挂载目录为docker项目上一级的volumes/data docker-compose up -d Copy 校验(查看进程是否启动，如果反复启动的程序，可以使用docker logs 镜像id 查看日志) docker ps Copy © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 09:54:10 "},"doc/部署文档/部署程序.html":{"url":"doc/部署文档/部署程序.html","title":"部署程序","keywords":"","body":"部署项目 api部署 下载源码 cd /home/source git clone https://gitee.com/beijing_sellwell/sellwell.git Copy 编辑运行api的脚本 #版本 注意，需要跟随版本号进行调整 version=4.2.5 #代码目录 code_path=/home/source/sellwell #运行目录 run_path=/home/source/api/ mkdir -p ${code_path} mkdir -p ${run_path} cd ${code_path} git checkout master git pull mvn clean install -DskipTests ps -ef |grep java |grep buyer |grep -v 'grep'|awk '{print $2}' | xargs kill -9 ps -ef |grep java |grep seller |grep -v 'grep'|awk '{print $2}' | xargs kill -9 ps -ef |grep java |grep manager |grep -v 'grep'|awk '{print $2}' | xargs kill -9 ps -ef |grep java |grep common |grep -v 'grep'|awk '{print $2}' | xargs kill -9 ps -ef |grep java |grep consumer |grep -v 'grep'|awk '{print $2}' | xargs kill -9 rm -rf ${run_path}*.jar mv ${code_path}/common-api/target/common-api-$version.jar ${run_path} mv ${code_path}/buyer-api/target/buyer-api-$version.jar ${run_path} mv ${code_path}/consumer/target/consumer-$version.jar ${run_path} mv ${code_path}/manager-api/target/manager-api-$version.jar ${run_path} mv ${code_path}/seller-api/target/seller-api-$version.jar ${run_path} cd ${run_path} mkdir logs nohup java -Xmx256m -Xms128m -Xss256k -jar manager-api-$version.jar> logs/manager.out & nohup java -Xmx256m -Xms128m -Xss256k -jar common-api-$version.jar> logs/common.out & nohup java -Xmx256m -Xms128m -Xss256k -jar buyer-api-$version.jar> logs/buyer.out & nohup java -Xmx256m -Xms128m -Xss256k -jar consumer-$version.jar> logs/consumer.out & nohup java -Xmx256m -Xms128m -Xss256k -jar seller-api-$version.jar> logs/seller.out & Copy 执行脚本 chmod +x start-api.sh sh start-api.sh Copy 前端部署 下载代码 cd /home/source git clone https://gitee.com/beijing_sellwell/sellwell-ui.git Copy 安装node yarn yum update yum install -y nodejs yum install -y npm npm install -g yarn #设置镜像 yarn config set registry https://registry.npm.taobao.org --global yarn config set disturl https://npm.taobao.org/dist --global yarn config set sass_binary_site http://cdn.npm.taobao.org/dist/node-sass --global # 升级node npm install -g n n install v14.16.0 Copy 编辑脚本 #代码目录 code_path=/home/source/sellwell-ui cd ${code_path} git checkout master git pull cd ${code_path}/manager yarn install yarn build cd ${code_path}/seller yarn install yarn build cd ${code_path}/buyer yarn install yarn build Copy 执行脚本 chmod +x start-ui.sh sh start-ui.sh Copy h5部署没有技巧，需要从hbuilder中导出h5，复制到目录：/home/source/h5 安装nginx sudo yum install -y nginx Copy Nginx 示例配置文件 # For more information on configuration, see: # * Official English Documentation: http://nginx.org/en/docs/ # * Official Russian Documentation: http://nginx.org/ru/docs/ user nginx; worker_processes auto; error_log /var/log/nginx/error.log; pid /run/nginx.pid; # Load dynamic modules. See /usr/share/doc/nginx/README.dynamic. include /usr/share/nginx/modules/*.conf; events { worker_connections 1024; } http { log_format main '$remote_addr - $remote_user [$time_local] \"$request\" ' '$status $body_bytes_sent \"$http_referer\" ' '\"$http_user_agent\" \"$http_x_forwarded_for\"'; access_log /var/log/nginx/access.log main; sendfile on; tcp_nopush on; tcp_nodelay on; keepalive_timeout 65; types_hash_max_size 2048; proxy_hide_header X-Powered-By; proxy_hide_header Server; # 开启gzip gzip on; # 启用gzip压缩的最小文件；小于设置值的文件将不会被压缩 gzip_min_length 1k; # gzip 压缩级别 1-10 gzip_comp_level 2; include /etc/nginx/mime.types; default_type application/octet-stream; # Load modular configuration files from the /etc/nginx/conf.d directory. # See http://nginx.org/en/docs/ngx_core_module.html#include # for more information. include /etc/nginx/conf.d/*.conf; #管理端 server { listen 443 ssl; ssl_certificate \"/etc/nginx/ssl/sellwell.cn.pem\"; ssl_certificate_key \"/etc/nginx/ssl/sellwell.cn.key\"; ssl_session_cache shared:SSL:1m; ssl_session_timeout 10m; ssl_ciphers HIGH:!aNULL:!MD5; ssl_prefer_server_ciphers on; include /etc/nginx/default.d/*.conf; server_name admin-b2b2c.sellwell.cn; try_files $uri $uri/ /index.html; root /home/source/sellwell-ui/manager/dist; } #商家端 server { listen 443 ssl; ssl_certificate \"/etc/nginx/ssl/sellwell.cn.pem\"; ssl_certificate_key \"/etc/nginx/ssl/sellwell.cn.key\"; ssl_session_cache shared:SSL:1m; ssl_session_timeout 10m; ssl_ciphers HIGH:!aNULL:!MD5; ssl_prefer_server_ciphers on; include /etc/nginx/default.d/*.conf; server_name store-b2b2c.sellwell.cn; try_files $uri $uri/ /index.html; root /home/source/sellwell-ui/seller/dist; } #h5端 server { listen 443 ssl; ssl_certificate \"/etc/nginx/ssl/sellwell.cn.pem\"; ssl_certificate_key \"/etc/nginx/ssl/sellwell.cn.key\"; ssl_session_cache shared:SSL:1m; ssl_session_timeout 10m; ssl_ciphers HIGH:!aNULL:!MD5; ssl_prefer_server_ciphers on; include /etc/nginx/default.d/*.conf; server_name m-b2b2c.sellwell.cn; try_files $uri $uri/ /index.html; root /home/source/h5; } #PC端 server { listen 443 ssl; ssl_certificate \"/etc/nginx/ssl/sellwell.cn.pem\"; ssl_certificate_key \"/etc/nginx/ssl/sellwell.cn.key\"; ssl_session_cache shared:SSL:1m; ssl_session_timeout 10m; ssl_ciphers HIGH:!aNULL:!MD5; ssl_prefer_server_ciphers on; include /etc/nginx/default.d/*.conf; server_name pc-b2b2c.sellwell.cn; try_files $uri $uri/ /index.html; root /home/source/sellwell-ui/buyer/dist; } #IM server { listen 443 ssl; ssl_certificate \"/etc/nginx/ssl/sellwell.cn.pem\"; ssl_certificate_key \"/etc/nginx/ssl/sellwell.cn.key\"; ssl_session_cache shared:SSL:1m; ssl_session_timeout 10m; ssl_ciphers HIGH:!aNULL:!MD5; ssl_prefer_server_ciphers on; include /etc/nginx/default.d/*.conf; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header REMOTE-HOST $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; server_name im.sellwell.cn; try_files $uri $uri/ /index.html; root /home/source/lili-shop-ui/im/dist; } #common-api server { listen 443 ssl; ssl_certificate \"/etc/nginx/ssl/sellwell.cn.pem\"; ssl_certificate_key \"/etc/nginx/ssl/sellwell.cn.key\"; ssl_session_cache shared:SSL:1m; ssl_session_timeout 10m; ssl_ciphers HIGH:!aNULL:!MD5; ssl_prefer_server_ciphers on; include /etc/nginx/default.d/*.conf; server_name common-api.sellwell.cn; location / { proxy_pass http://127.0.0.1:8890; } } #admin-api server { listen 443 ssl; ssl_certificate \"/etc/nginx/ssl/sellwell.cn.pem\"; ssl_certificate_key \"/etc/nginx/ssl/sellwell.cn.key\"; ssl_session_cache shared:SSL:1m; ssl_session_timeout 10m; ssl_ciphers HIGH:!aNULL:!MD5; ssl_prefer_server_ciphers on; include /etc/nginx/default.d/*.conf; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header REMOTE-HOST $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; server_name admin-api.sellwell.cn; location / { proxy_pass http://127.0.0.1:8887; } } #buyer-api server { listen 443 ssl; ssl_certificate \"/etc/nginx/ssl/sellwell.cn.pem\"; ssl_certificate_key \"/etc/nginx/ssl/sellwell.cn.key\"; ssl_session_cache shared:SSL:1m; ssl_session_timeout 10m; ssl_ciphers HIGH:!aNULL:!MD5; ssl_prefer_server_ciphers on; include /etc/nginx/default.d/*.conf; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header REMOTE-HOST $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; server_name buyer-api.sellwell.cn; location / { proxy_pass http://127.0.0.1:8888; } } #store-api server { listen 443 ssl; ssl_certificate \"/etc/nginx/ssl/sellwell.cn.pem\"; ssl_certificate_key \"/etc/nginx/ssl/sellwell.cn.key\"; ssl_session_cache shared:SSL:1m; ssl_session_timeout 10m; ssl_ciphers HIGH:!aNULL:!MD5; ssl_prefer_server_ciphers on; include /etc/nginx/default.d/*.conf; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header REMOTE-HOST $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; server_name store-api.sellwell.cn; location / { proxy_pass http://127.0.0.1:8889; } } #im-api server { listen 443 ssl; ssl_certificate \"/etc/nginx/ssl/sellwell.cn.pem\"; ssl_certificate_key \"/etc/nginx/ssl/sellwell.cn.key\"; ssl_session_cache shared:SSL:1m; ssl_session_timeout 10m; ssl_ciphers HIGH:!aNULL:!MD5; ssl_prefer_server_ciphers on; include /etc/nginx/default.d/*.conf; server_name im-api.sellwell.cn; location / { proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection \"Upgrade\"; proxy_set_header X-real-ip $remote_addr; proxy_set_header X-Forwarded-For $remote_addr; proxy_pass http://127.0.0.1:8885; } } } Copy nginx 启动 service nginx restart Copy 维护 代码更新部署 cd /home/source sh start-api.sh sh start-ui.sh #h5 没有捷径，需要导出然后复制到线上对应目录 Copy © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/部署文档/部署微服务.html":{"url":"doc/部署文档/部署微服务.html","title":"部署微服务","keywords":"","body":"部署项目 上线准备 一套完整的域名（PC端、移动端、商家端、管理端、以及4个API端） ssl证书 域名备案 支付宝支付参数 微信支付参数 微信联合登陆参数 阿里云OSS参数 阿里云短信参数 快递鸟物流查询参数 最低服务器配置 4核32G内存服务器一台（推荐使用 CentOS 7.6 64位）（如果基础中间件使用外部服务器的，则可以适量减少内存） 环境准备 jdk 8/jdk 17 (jdk 17 启动服务时需要增加启动参数 '--add-opens java.base/java.lang.reflect=ALL-UNNAMED --add-opens java.base/java.lang=ALL-UNNAMED') Mysql 8.0.25 Redis 6.2.6 elasticsearch 7.17.5 需要IK分词器 rocket-server 4.9.2 xxl-job 2.3.0 nacos 2.3.0 seata 1.5.2 Copy 以上环境为演示站点环境，尽可能使用同一版本 中间件（如果自行部署基础中间件，则可以略过这里，这里主要安装基础中间件） kubernates https://gitee.com/beijing_sellwell/docker/tree/micro/kubernetes docker-compose(已经安装的可以略过) # 安装git sudo yum install -y git # 安装maven sudo yum install -y maven # 安装依赖 sudo yum install -y yum-utils device-mapper-persistent-data lvm2 # 设置源 sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo sudo yum makecache fast # 安装docker sudo yum install -y docker-ce # 启动服务 sudo systemctl start docker # 安装docker-compose curl -L https://github.com/docker/compose/releases/download/v2.17.1/docker-compose-linux-x86_64 > /usr/local/bin/docker-compose # 授权 sudo chmod +x /usr/local/bin/docker-compose # 检测版本号 docker-compose -v Copy docker脚本下载 git clone -b micro https://gitee.com/beijing_sellwell/docker.git Copy 修改配置 Rocketmq 需要特殊配制一下节点ip 在 config/broker.conf 文件中，将brokerIP1修改为部署docker的局域网ip Rocketmq 和 Elasticsearch 映射本地目录权限一定要设置为 777 权限，否则启动不成功 运行脚本（第一行为部署环境包括Mysql、mq、redis、xxljob等所有中间健） docker-compose up -d Copy 校验(查看进程是否启动，如果反复启动的程序，可以使用docker logs 镜像id 查看日志) docker ps Copy api部署 执行项目根目录脚本 chmod +x start-api.sh sh start-api.sh Copy 前端部署 编译 安装node yarn yum update yum install -y nodejs npm install -g yarn #设置镜像 yarn config set registry https://registry.npm.taobao.org --global yarn config set disturl https://npm.taobao.org/dist --global yarn config set sass_binary_site http://cdn.npm.taobao.org/dist/node-sass --global # 升级node npm install -g n n lts Copy 执行项目根目录脚本 chmod +x build.sh.sh sh build.sh.sh Copy h5部署没有技巧，需要从hbuilder中导出h5，复制到目录：/home/source/h5 部署 nginx 安装nginx yum install -y nginx Copy Nginx 示例配置文件 # For more information on configuration, see: # * Official English Documentation: http://nginx.org/en/docs/ # * Official Russian Documentation: http://nginx.org/ru/docs/ user nginx; worker_processes auto; error_log /var/log/nginx/error.log; pid /run/nginx.pid; # Load dynamic modules. See /usr/share/doc/nginx/README.dynamic. include /usr/share/nginx/modules/*.conf; events { worker_connections 1024; } http { log_format main '$remote_addr - $remote_user [$time_local] \"$request\" ' '$status $body_bytes_sent \"$http_referer\" ' '\"$http_user_agent\" \"$http_x_forwarded_for\"'; access_log /var/log/nginx/access.log main; sendfile on; tcp_nopush on; tcp_nodelay on; keepalive_timeout 65; types_hash_max_size 2048; proxy_hide_header X-Powered-By; proxy_hide_header Server; # 开启gzip gzip on; # 启用gzip压缩的最小文件；小于设置值的文件将不会被压缩 gzip_min_length 1k; # gzip 压缩级别 1-10 gzip_comp_level 2; include /etc/nginx/mime.types; default_type application/octet-stream; # Load modular configuration files from the /etc/nginx/conf.d directory. # See http://nginx.org/en/docs/ngx_core_module.html#include # for more information. include /etc/nginx/conf.d/*.conf; #管理端 server { listen 443 ssl; ssl_certificate \"/etc/nginx/ssl/xxx.cn.pem\"; ssl_certificate_key \"/etc/nginx/ssl/xxx.cn.key\"; ssl_session_cache shared:SSL:1m; ssl_session_timeout 10m; ssl_ciphers HIGH:!aNULL:!MD5; ssl_prefer_server_ciphers on; include /etc/nginx/default.d/*.conf; server_name admin.xxx.cn; try_files $uri $uri/ /index.html; root /home/source/ui/manager/dist; } #商家端 server { listen 443 ssl; ssl_certificate \"/etc/nginx/ssl/xxx.cn.pem\"; ssl_certificate_key \"/etc/nginx/ssl/xxx.cn.key\"; ssl_session_cache shared:SSL:1m; ssl_session_timeout 10m; ssl_ciphers HIGH:!aNULL:!MD5; ssl_prefer_server_ciphers on; include /etc/nginx/default.d/*.conf; server_name store.xxx.cn; try_files $uri $uri/ /index.html; root /home/source/ui/seller/dist; } #h5端 server { listen 443 ssl; ssl_certificate \"/etc/nginx/ssl/xxx.cn.pem\"; ssl_certific#商家端ate_key \"/etc/nginx/ssl/xxx.cn.key\"; ssl_session_cache shared:SSL:1m; ssl_session_timeout 10m; ssl_ciphers HIGH:!aNULL:!MD5; ssl_prefer_server_ciphers on; include /etc/nginx/default.d/*.conf; server_name m.xxx.cn; try_files $uri $uri/ /index.html; root /home/source/h5; } #PC端 server { listen 443 ssl; ssl_certificate \"/etc/nginx/ssl/xxx.cn.pem\"; ssl_certificate_key \"/etc/nginx/ssl/xxx.cn.key\"; ssl_session_cache shared:SSL:1m; ssl_session_timeout 10m; ssl_ciphers HIGH:!aNULL:!MD5; ssl_prefer_server_ciphers on; include /etc/nginx/default.d/*.conf; server_name pc.xxx.cn; try_files $uri $uri/ /index.html; root /home/source/sellwell-ui/buyer/dist; } #api-gateway server { listen 443 ssl; ssl_certificate \"/etc/nginx/ssl/xxx.cn.pem\"; ssl_certificate_key \"/etc/nginx/ssl/xxx.cn.key\"; ssl_session_cache shared:SSL:1m; ssl_session_timeout 10m; ssl_ciphers HIGH:!aNULL:!MD5; ssl_prefer_server_ciphers on; include /etc/nginx/default.d/*.conf; server_name api.xxx.cn; location / { proxy_pass http://127.0.0.1:8888; } } } Copy nginx 启动 service nginx restart Copy © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 09:54:10 "},"doc/部署文档/MINIO部署.html":{"url":"doc/部署文档/MINIO部署.html","title":"MINIO部署","keywords":"","body":"MINIO部署 docker-compose文件下载 https://gitee.com/beijing_sellwell/docker/blob/master/docker-compose-minio.yml docker-compose部署 下载yml后执行docker-compose部署 docker-compose -f docker-compose-minio.yml up -d MINIO配置 系统配置 测试文件上传即可 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/部署文档/后端多环境配置.html":{"url":"doc/部署文档/后端多环境配置.html","title":"后端多环境配置","keywords":"","body":"后端多环境配置 设定环境 一般情况下，设有以下环境： dev（开发环境） test（测试环境） uat（预发布环境） prod（生产环境） 修改 spring 配置文件 将具体服务的 application.yml 文件增加后缀名为对于环境名如 开发环境 application-dev.yml 如需其他环境可复制多份，改为对应环境名称 新建 application.yml 文件 spring: profiles: active: @profileActive@ Copy profileActive 为 maven 配置文件中的变量 修改 maven 配置文件 修改项目根目录的 pom.xml 文件， 在 标签里添加以下内容 dev true dev test test prod prod Copy 其中 id 和 profileActive 的值为环境名。 activeByDefault 为默认环境 额外配置(可选) maven中的profile的激活条件还可以根据jdk、操作系统、文件存在或者缺失来激活。这些内容都是在 标签中配置，如下： true 1.8 [1.8,) Windows XP Windows x86 5.1.2600 Copy 修改 logback-spring.xml 为所有 appender 标签和 appender-ref 标签 增加 , name 里面的内容为所有环境的值 以下为修改后的文件 ${APP_NAME} ${LOG_FILE_PATH}/${APP_NAME}-%d{yyyy-MM-dd}.log 30 ${FILE_LOG_PATTERN} ${LOG_FILE_PATH}/rocketmq.log ${LOG_FILE_PATH}/rocketmq/rocketmq-%d{yyyy-MM-dd}.log 30 30MB %d{yy-MM-dd.HH:mm:ss.SSS} [%-16t] %-5p %-22c{0} %X{ServiceId} - %m%n ${LOGSTASH_SERVER} UTC {\"appName\":\"${APP_NAME}\"} Copy 多环境启动 maven 打包 可使用 -P 参数，参数后跟环境名，如 -P dev 以下为示例 mvn clean install package -P dev -Dmaven.test.skip=true Copy ｜ 注：使用 -P参数打包之后 application.yml 里面的 @profileActive@ 会修改为对应参数。打包完成，不带参数的 jar 启动会默认为 -P 后面填写的环境 jar 启动参数 jar 启动时，可根据启动参数，指定启动环境 --spring.profiles.active=xxx, xxx 为环境名 以下为示例 java -jar xxx.jar --spring.profiles.active=test Copy 资源过滤（可选） 如果不配置这一步，将会在任何环境下打包都会带上全部的配置文件，可以配置只保留对应环境下的配置文件，这样安全性更高。 | 配置完成这一步，便无法根据 jar 启动参数切换环境 在 pom.xml 文件中指定 过滤的条件即可，如下： src/main/resources application*.properties src/main/resources true application.yml application-${profileActive}.yml Copy © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2023-10-28 21:35:58 "},"doc/开发文档/分库分表Sharding文档.html":{"url":"doc/开发文档/分库分表Sharding文档.html","title":"会员选择器","keywords":"","body":"© snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2023-10-28 21:35:58 "},"doc/开发文档/后端开发规范.html":{"url":"doc/开发文档/后端开发规范.html","title":"后端开发规范","keywords":"","body":"© snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2023-10-28 21:35:58 "},"doc/开发文档/控制器开发规范.html":{"url":"doc/开发文档/控制器开发规范.html","title":"控制器开发规范","keywords":"","body":"© snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2023-10-28 21:35:58 "},"doc/开发文档/前端开发规范.html":{"url":"doc/开发文档/前端开发规范.html","title":"前端开发规范","keywords":"","body":"© snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2023-10-28 21:35:58 "},"doc/开发文档/缓存实现.html":{"url":"doc/开发文档/缓存实现.html","title":"缓存实现","keywords":"","body":"© snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2023-10-28 21:35:58 "},"doc/使用文档/常见问题.html":{"url":"doc/使用文档/常见问题.html","title":"常见问题","keywords":"","body":"使用常见问题 后台修改了分类，但是PC前台展示的分类并没有更新？ 前端对分类进行了缓存，半小时会进行刷新。 如果您想立即查看效果，可以去删除缓存。 缓存位置：F12-Application-Storage：category/category_expiration_time 为什么添加商品时看不到品牌？ 品牌与商品分类进行关联。 需要先将品牌与分类关联才能在发布商品时选择品牌。 为什么添加分类后，店铺发布商品看不到此分类？ 店铺发布商品是根据经营类目进行发布的。 经营类目为商品一级分类。 可以去运营后台-店铺-店铺列表-修改-经营类目，进行添加店铺的经营类目。 店铺与平台是如何结算的？ 店铺与平台按照结算单进行结算。 店铺结算单的生成规则是在：店铺详情中进行设置结算日。 每个月按照结算日生成结算单。例如写：1、15，每个月会生成两份结算单。 结算单流程：生成结算单 - 店铺对账 - 平台付款 - 完成。 结算方式为：线下支付。如果需要线上结算，自行去对接分账支付接口即可。 哪些促销由店铺添加，哪些促销由平台添加？ 店铺促销：店铺优惠券、满额活动、拼团活动。 平台促销：平台优惠券、优惠券活动、秒杀活动、砍价活动、积分商品。 为什么商品列表按照规格（SKU）展示，不是按照商品（SPU）展示？ 如果按照SPU展示。如果一个商品设置了三个规格。规格为：100元、200元、300元。商品列表应如何展示价格？如果其中有两个规格分别参与了秒杀、拼团，商品列表中是否展示促销标志，点击商品应该展示哪个SKU？ 以为以上原因，所以商品列表是根据SKU进行展示。 秒杀活动是如何添加的？ 运营后台中有秒杀时间设置，可以设定每天开启的秒杀活动场次。 每日会有定时任务创建七天后的秒杀活动。 如果想创建七天内的活动，可以通过调用manager-api 初始化秒杀活动的方法（可直接用swagger调用）。 注意：如果初始化秒杀活动，会先清除掉当前所有的秒杀活动。 为什么点击取消订单是空白的？ 因为平台没有设置取消原因。 取消原因设置位置：运营后台-订单-售后原因。 商品列表中的筛选项目是在哪里定义的？ 自定义筛选项目是商品参数。 商品参数设置在三级商品分类中，需设置参数为可索引。 平台设定参数，商家选择参数则在商品列表中展示。 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2023-10-28 21:35:58 "},"doc/使用文档/商品管理.html":{"url":"doc/使用文档/商品管理.html","title":"商品管理","keywords":"","body":"商品管理 发布商品 菜单路径 店铺后台 > 商品 > 商品管理 > 发布商品 流程图 发布商品顺序 选择商品类型➡选择商品分类➡填写商品基础信息➡填写规格信息➡填写商品详情➡设定商品参数。 商品类型 商品类型分为：实物商品、虚拟商品。 实物商品：零售商品、批发商品，实物商品订单需要物流配送。 虚拟商品：虚拟商品订单无需配送，订单核验即可。 商品模板导入：已存为草稿的商品模板，可以选择对应的模板进行后续操作。 选择商品分类 商品分类：商品分类是由管理后台➡商品➡商品分类进行添加的。 再由店铺入驻时选择的商品经营类目所选择，之后发布商品时选取的。 商户需选择 “三级商品分类” 后才能进行下一步。 发布信息 发布商品主要包含： 商品基本信息 商品交易信息 商品规格及图片 商品描述详情 商品物流信息 其他信息 商品名称-商品基础的名称 商品展示价格-商品的展示价格 商品卖点-商品的卖点信息 商品品牌-商品三级分类绑定过的商品品牌 计量单位-管理后台添加的计量单位可以供商家选择 销售模式-商品的销售模式(零售/批发) 商品图片-商品的展示图片 店铺分类-店铺内的商品分类用于店铺不同分类的展示，商家自己添加店铺分类进行选取 商品描述-商品基础的描述 物流模板-商家在配送模板添加过的模板进行选择 商品参数-商品三级分类绑定过的参数 规格信息包含： 规格名、规格项 成本价：商品的成本价格 价格：商品实际价格 重量：商品的重量 库存：商品的库存 货号：商品的货号 规格图片：默认展示的是商品图片，可以自定义修改规格图片，点击编辑图片将原来存在的图片删除后重新上传规格图片 鼠标移动到编辑图片展示当前规格图片 添加规格最多添加五个规格项，添加规格值最多添加十个规格值。 保存方式 可以选择保存商品/保存模板两种方式 保存商品根据是否立即发布进行判断是否将商品立即发布--上架状态的商品，如果当前状态选择的保存到仓库则发布下架的商品 保存模板是将填写商品发布内容保存为模板方便日后使用。 商品列表 运营后台商品列表展示 商品名称、商品图片、商品二维码、商品编号、价格、销售模式、商品类型、状态、审核状态、店铺名称。 平台可以下架/上架发布的商品，也可以查看商品详情-点击查看进行查看。 店铺后台商品列表展示 商品名称、商品图片、商品二维码、商品编号、价格、销售模式、商品类型、库存、状态、审核状态、店铺名称。 商家也可以下架/上架发布的商品，商家还可以重新编辑商品内容修改完的商品需要平台审核，以及可以直接点击库存输入需要修改的库存数量直接修改商品的库存无需审核。 商家还有批量操作，勾选中需要批量操作的商品---可以进行批量上下架商品，批量删除商品，批量修改物流配送模板。 商家导入商品 点击导入商品弹出导入商品弹窗，点击下载导入模板会下载一个表格，填入对应的信息（商品名称，商品卖点，商品分类 运费模板，计量单位，发布状态，商品图片，成本价，销售价，库存，重量，货号，详情，规格项，规格值）将保存好的表格拖拽到弹窗内进行导入商品。 商品在买家端的展示 在买家端会展示商品价格--默认规格的价格，商品分类，商品名称，商品的库存，商品重量，商品图片，规格，商品卖点，商品描述，商品的参数，商品评价，以及展示当前商品的促销，优惠券，收藏商品/店铺，联系客服，购买方式--立即购买/加入购物车。 商品审核 平台开启商品审核功能后，店铺添加的商品需要平台审核通过后才能展示。 商品审核开关位置：运营后台-设置-系统设置-商品审核-商品审核。 常见问题 商品价格在什么地方用到了? 商品价格是用于商品列表中展示的价格，并没有实际的作用。用户看到的价格是 商品规格（SKU）设置的价格。 为什么添加商品时看不到品牌? 品牌与商品分类（三级分类）进行关联。 需要先将品牌与分类关联才能在发布商品时选择品牌。 上下架是什么? 下架会将商品的状体变为下架，上架会把商品状态改为上架 下架的商品不能进行购买 上架的商品可以进行购买 为什么有些商品不需要审核？ 因为管理后台设置 - 系统设置 - 商品设置里面的商品审核被关闭了 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/分类管理.html":{"url":"doc/使用文档/分类管理.html","title":"分类管理","keywords":"","body":"商品分类 菜单路径 运营后台 > 商品 > 关联管理 > 商品分类 商品分类列表 设置平台的商品分类。 商品分类为树形结构，层级为三级。 分类列表展示：分类名称、状态、佣金。三级商品分类可绑定：参数、品牌、规格。 可以操作编辑分类，禁用/启用分类，删除分类 新增分类 对商品分类进行新增。可在一级、二级分类中新增下级分类，下级分类 默认携带 上级分类的佣金比例。 设置分类的：名称、排序、是否展示、佣金。 绑定品牌 对当前的分类进行品牌绑定。 一个分类可绑定多个品牌。 只有三级商品分类可绑定品牌。 绑定的品牌可以在发布商品时绑定对应的品牌。 绑定参数 对当前的分类进行参数绑定。 设置参数项，并设定参数内容。 参数可设置是否必填以及是否可索引。 可索引：用户前台商品列表可根据此参数进行筛选。 只有三级商品分类可绑定参数。 绑定的参数可以在发布商品时进行选择参数。 绑定规格 对当前分类进行规格绑定。 店铺添加商品时可选择平台设置的默认规格。如果不满足商家可自定义规格。 只有三级商品分类可绑定规格。 绑定的规格可以在发布商品的时候在添加规格项的时候可以选取绑定的规格项，规格值。 常见问题 分类中设置的佣金作用是什么？ 答：平台佣金 是根据分类中设定的佣金比例来计算的。 为什么我添加分类之后在PC首页看不到？ 答：买家PC首页中的分类做了页面缓存，默认有效时间为30分钟。可以等30分钟看效果，或者清除一下缓存。 为什么我店铺选择分类时有些分类看不到？ 答：因为店铺发布商品的分类是根据店铺创建时的店铺经营类目进行配置的，店铺发布商品只根据当前配置的店铺类目进行展示 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/品牌管理.html":{"url":"doc/使用文档/品牌管理.html","title":"品牌管理","keywords":"","body":"商品品牌 菜单路径 运营后台 > 商品 > 关联管理 > 品牌列表 商品品牌列表 设置平台的商品品牌。 分类列表展示：品牌名称、品牌图标、状态。 可以通过品牌名称进行搜索对应的品牌。 新增品牌 对商品品牌进行新增。设置品牌的名称和图标。 编辑品牌 对商品品牌的品牌名称，品牌图标进行编辑 禁用/启用品牌 点击禁用会将该品牌进行禁用，并且将该品牌状态改为禁用 点击启用会将该品牌进行启用，并且将该品牌状态改为启用 已经绑定过的品牌无法禁用，需将绑定过该品牌的商品进行解绑 删除品牌 点击删除会删除当前所选的商品品牌 已经绑定过的品牌无法删除，需将绑定过该品牌的商品进行解绑 常见问题 品牌的作用是什么？ 商品品牌用于在商品列表筛选使用。 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/规格管理.html":{"url":"doc/使用文档/规格管理.html","title":"规格管理","keywords":"","body":"商品规格 菜单路径 运营后台 > 商品 > 关联管理 > 规格列表 商品规格列表 设置平台的商品规格。 规格列表展示：规格名称、规格值。 可以通过规格名称进行搜索规格。 添加规格 填写规格名称，规格值添加规格。 规格值可填写多个回车确认 编辑规格 修改需要修改的规格修改规格名称，规格值，保存后修改成功 删除规格 点击删除删除对应的规格，如果该规格绑定了分类需要先解绑即可删除规格。 批量删除规格 勾选需要批量删除的规格点击批量删除即可删除已勾选的规格，如果该规格绑定了分类需要先解绑即可删除规格。 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/计量单位.html":{"url":"doc/使用文档/计量单位.html","title":"计量单位","keywords":"","body":"计量单位 菜单路径 运营后台 > 商品 > 关联管理 > 计量单位 计量单位列表 计量单位列表展示：计量单位、创建时间、更新时间、操作人。 新增计量单位 添加计量单位，填写计量单位名称确认后添加。 编辑计量单位 修改需要修改的计量单位名称，确认后修改。 删除计量单位 点击删除确认后删除该计量单位 批量删除计量单位 勾选需要删除的计量单位，点击批量删除确认后删除已勾选的计量单位 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/订单管理.html":{"url":"doc/使用文档/订单管理.html","title":"订单管理","keywords":"","body":"商品订单 菜单路径 运营后台 > 订单 > 商品订单 普通订单-流程图 商品订单列表 展示平台内所有的商品订单列表。 商品订单分页列表：订单编号、订单来源、订单类型、买家名称、订单金额、订单状态、下单时间、操作（查看）。 订单来源：PC端、微商城、小程序端、移动端。 订单类型：普通订单、拼团订单、赠品订单、积分订单、砍价订单。 点击”查看“，进入订单详情页面。 根据订单号、会员名称、订单类型、下单时间、订单状态进行筛选。 导出订单，点击导出订单会生成-商品订单.xls，进行查看 商品订单详情 展示商品订单详情。展示商家信息、买家信息、订单金额详情、订单商品列表。 商家信息：店铺名称、店铺账号、发货时间、物流公司、物流单号。 买家信息：会员名、收件人、收件地址、联系电话、发票信息 订单信息：订单状态、支付方式、支付单号、下单时间、付款时间。 订单商品列表：商品名称、规格、商品缩略图、单价、数量、佣金。 订单金额详情：商品金额、运费金额、优惠金额、实付金额。 操作订单修改订单支付金额 操作订单，修改买家收货地址 操作订单取消，点击订单取消确认后取消该订单 操作订单收款，点击收款后即为支付 查看订单日志：点击查看该订单的详细日志内容 打印发货单：点击后可以打印电子发货单 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/虚拟订单.html":{"url":"doc/使用文档/虚拟订单.html","title":"虚拟订单","keywords":"","body":"虚拟订单 菜单路径 运营后台 > 订单 > 虚拟订单 虚拟订单-流程图 虚拟订单列表 虚拟订单为不需要物流的特殊订单，买家下单付款后会得到一个校验码，校验码交由商家将自动完成订单。 虚拟订单详情 展示虚拟订单的订单号，订单来源，订单状态，下单时间，发票信息，收货信息，支付方式，买家留言，发票信息，以及商品的信息-商品的图片，商品的名称，优惠方式，单价，数量，小计，商品总额，运费，应付金额 订单日志：查看订单详细的日志内容 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/收款流水.html":{"url":"doc/使用文档/收款流水.html","title":"收款流水","keywords":"","body":"收款记录 菜单路径 运营后台 > 订单 > 流水 > 收款记录 收款流水列表 展示收款单流水列表。 收款单流水列表展示：订单编号、店铺名称、支付方式、流水号、第三方流水号、客户端、支付时间、订单金额、支付状态。 支付方式：暂未支付、余额支付、银行转账、支付宝、微信。 付款状态：未付款、已付款。 可按照订单号、付款状态、支付方式、创建时间进行筛选。 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/退款流水.html":{"url":"doc/使用文档/退款流水.html","title":"退款流水","keywords":"","body":"退款流水 菜单路径 运营后台 > 订单 > 流水 > 退款流水 退款流水列表 展示退款单流水列表。 退款单流水列表展示：售后单号、订单号、第三方付款流水、第三方退款流水、退款金额、申请时间、退款状态。 可根据订单号、退款状态、退款时间进行筛选。 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/售后原因.html":{"url":"doc/使用文档/售后原因.html","title":"售后原因","keywords":"","body":"售后原因 菜单路径 运营后台 > 订单 > 售后 > 售后原因 售后原因列表 展示平台内所有的售后原因列表。 用户选择售后原因配置的地方。 类型：退货、退款、取消、投诉。 售后原因列表：原因、类型、操作（编辑、删除）。 售后原因添加 切换到需要添加售后原因的模块，点击添加 输入售后原因确定后添加售后原因 售后原因编辑 选择需要编辑的售后原因输入需要修改的内容确认后修改该售后原因 售后原因删除 选择需要删除的点击确认删除后会删除掉该售后原因 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/售后管理.html":{"url":"doc/使用文档/售后管理.html","title":"售后管理","keywords":"","body":"售后管理 菜单路径 运营后台 > 订单 > 售后 > 售后管理 流程图 售后列表 展示平台所有售后列表。 售后类型支持：退款、退货。 售后列表展示：售后服务单号，订单编号，商品名称，商品图片，会员名称，商家名称，售后金额，售后类型，售后类型，售后状态，申请时间、操作（查看）。 售后列表可按照：订单编号、售后单号、售后状态、申请时间、商家名称、会员名称、售后类型进行筛选。 售后详情 退款单详情展示：退款单编号、买家退款申请、卖家处理、订单付款信息、平台退款审核信息。 买家退款申请：退款状态、申请时间、申请人（买家）、订单编号、商品名称、退款金额、退还佣金、退款原因、退货说明、退款凭证。 卖家退款处理：商家名称、处理时间、处理备注、审核结果。 平台退款处理：审核结果、处理时间、处理备注。 退款申请 买家进行售后选择类型为退款，由商家或者平台进行确认，确认通过后将支付的金额退回 退货申请 买家进行售后选择类型为退货，由商家或者平台进行确认，确认之后再由买家将退货的物流信息提交，商家或者平台进行确认收货后进行退款 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/交易投诉.html":{"url":"doc/使用文档/交易投诉.html","title":"交易投诉","keywords":"","body":"投诉管理 菜单路径 运营后台 > 订单 > 售后 > 交易投诉 投诉列表 展示平台内所有的投诉列表。 会员名称、订单编号、商品名称、投诉主体、投诉时间、投诉状态、操作（查看） 可根据投诉状态、投诉人、投诉编号进行筛选 。 投诉管理 处理会员提交的投诉申请。 投诉申请：订单信息、投诉商品、投诉信息、投诉处理。 订单信息：订单号、下单时间、订单金额、订单状态。 投诉商品：商品名称（规格）、单价、购买数量。 投诉信息：投诉人、投诉时间、被投诉商家、投诉原因、投诉内容、投诉状态、凭证。 点击“商家申诉”，投诉将发送至商家，由商家进行申诉。 点击“仲裁并结束投诉”，结束该投诉，并填写仲裁意见。 发送对话可以回复投诉内容，输入需要回复的内容，点击回复进行回复。 投诉详情 查看会员提交的投诉申请。 投诉申请：订单信息、投诉商品、投诉信息、投诉处理。 订单信息：订单号、下单时间、订单金额、订单状态。 投诉商品：商品名称（规格）、单价、购买数量。 投诉信息：投诉人、投诉时间、被投诉商家、投诉原因、投诉内容、投诉状态、凭证。 平台最终处理：处理时间、处理意见、处理人。 查看对话记录，对话详情。 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/配送模板.html":{"url":"doc/使用文档/配送模板.html","title":"配送模板","keywords":"","body":"物流管理 菜单路径 店铺后台 > 设置 >配送设置 > 配送模板 配送模板列表 展示当前店铺的物流配送模板。 物流配置模板是发布商品时物流选择的配送模板。 物流配送模板：模板名称、是否包邮、配送地区、首件（重）数量、运费、续件（重、件）、运费、操作（编辑、删除）。 点击“新增配送规则“，进入配送规则新增页面。 点击”编辑“进入当前模板的修改页面。 点击删除删除已存在的配送模板。 新增配送模板 店铺运费可按件、按重、包邮进行计算运费。 可根据不同的地区设置不同的运费，支持包邮区域。 配送规则详细设置：按重量、按件数。 按重量：配送区域、首重（KG）、首费、续重（KG）、续费、操作（编辑、删除） 按件数：配送区域、首件、首费、续件、续费、操作（编辑、删除） 包邮：配送模板包邮，全部地区包邮。 点击按件、按重进行切换物流配送模板规则。 ”配送区域“，最多支持二级，已选择的区域不能进行再次选择。 点击删除可以删除已存在的地区模板。 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/会员管理.html":{"url":"doc/使用文档/会员管理.html","title":"会员管理","keywords":"","body":"会员管理 菜单路径 运营后台 > 会员 > 会员管理 > 会员列表 会员列表 展示整个平台的会员列表。 会员分页列表：会员名称、会员昵称、联系方式、注册时间、积分数量、操作（查看、编辑、禁用） 可根据会员名称、会员昵称、会员状态进行筛选 后台添加会员 平台可在后台进行会员新增。 新增会员需设置：手机号、会员名称、会员密码。 后台修改会员 点击编辑会员可以修改会员的头像，用户昵称，性别，密码，生日，所在地 会员详情 展示会员详细信息：基本信息、会员积分、会员订单、会员收件地址、会员余额、会员发票 基本信息：会员头像、会员名称、上次登录时间、会员状态、昵称、性别、生日、地区、注册时间。 会员积分：剩余积分、积分历史。 会员订单：展示会员订单列表，列表展示：订单编号、订单价格、订单类型、来源、订单状态、支付状态、售后状态、投诉状态、购买店铺、下单时间、操作（查看） 收件地址：地址别名、收件人姓名、收件人电话、地址、详细地址、是否默认；可以平台给会员新增地址内容，收货人姓名，收货人手机，收货人地址，详细地址，地址别名，是否默认，以上填完保存后在会员地址内展示 会员余额：余额数量、冻结余额数量，会员余额变化列表：会员名称、业务类型、变动金额、变动时间、变动明细。 会员发票：订单编号、发票抬头、纳税人识别号、发票金额、发票内容。 会员回收站 菜单路径 运营后台 > 会员 > 会员管理 > 回收站 回收站会员列表 展示禁用会员分页列表。 禁用会员无法再次登录。 可以对禁用的会员进行启用。 可以使用会员名称，联系方式进行筛选。 常见问题： 会员名称 的规则是？ 答：PC端注册自行填写。 第三方信任登录：第三方信任登录uuid 手机号注册：m+手机号 会员昵称 的规则是？ 答：PC端使用手机号注册，使用的 用户手机号。 微信小程序直接登录，使用的就是 微信昵称。 移动端通过手机号登录，使用的就是 用户手机号。 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/会员积分.html":{"url":"doc/使用文档/会员积分.html","title":"会员积分","keywords":"","body":"积分历史 菜单路径 运营后台 > 会员 > 积分 > 积分历史 积分历史列表 展示积分历史分页列表。 积分历史分页列表：会员名称、操作内容、之前积分、变动积分、当前积分、操作时间。 根据会员名称进行筛选。 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/会员资金.html":{"url":"doc/使用文档/会员资金.html","title":"会员资金","keywords":"","body":"会员资金 菜单路径 运营后台 > 会员 > 预存款 > 会员资金 会员资金 展示会员资金变化分页列表。 会员资金分页列表：会员名称、变动金额、变更时间、业务类型、详细 。 根据会员名称、充值单号、操作时间进行筛选。 充值记录 菜单路径 运营后台 > 会员 > 预存款 > 充值记录 展示会员充值分页列表。 会员充值分页列表：会员名称、充值单号、充值金额、充值方式、支付状态、支付时间。 根据会员名称、充值单号、操作时间进行筛选。 提现申请 菜单路径 运营后台 > 会员 > 预存款 > 提现申请 展示会员提现申请 操作审核通过与否，通过则管理员。 根据会员名称、充值单号、操作时间进行筛选。 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/会员评价.html":{"url":"doc/使用文档/会员评价.html","title":"会员评价","keywords":"","body":"会员评价 菜单路径 运营后台 > 会员 > 评价 > 会员评价 评价列表 展示会员评价分页列表。 会员评价分页列表：商品名称、会员名称、评价、物流评分、服务评分、描述评分、评价时间、页面展示、操作（查看、删除） 点击”查看“，进入会员评价详情页面。 点击”删除“,删除会员评价。 点击页面 展示/隐藏 会将该评论展示或者隐藏。 根据会员名称进行筛选。 会员评价详情 展示用户评价信息以及商家回复信息。 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/店铺管理.html":{"url":"doc/使用文档/店铺管理.html","title":"店铺管理","keywords":"","body":"店铺管理 店铺入驻流程图 菜单路径 运营后台 > 店铺 > 店铺列表 店铺列表 展示平台内所有的店铺分页列表。 店铺分页列表：店铺账号、店铺名称、所在地、店铺状态、创建时间、操作（查看，修改，关闭）。 点击”查看“，进入店铺详情页面。 点击”新增“，进入店铺新增页面。 点击修改修改店铺内容 根据会员名称，店铺名称，店铺状态，创建时间进行筛选。 店铺详情 展示店铺详情信息。店铺基础信息、店铺入驻信息、经营范围。 基础信息：商家账号、店铺名称、开店时间、状态（开启/关闭）、是否自营（是/否）、结算日 入驻信息：公司信息、营业执照信息、法人信息、结算银行信息。 公司信息：公司名称、公司所在地、公司详细地址、公司电话、员工人数、注册资金、联系人、联系人电话、邮箱。 营业执照信息：营业执照号、营业范围、营业执照电子版。 法人信息：法人姓名、法人证件号、法人身份证电子版。 结算银行信息：开户名、账号、开户行名称、联行号、开户行所在地、开户许可证。 经营范围：根据平台主分类。设定商家的经营范围。 新增店铺 填写店铺信息，对店铺进行新增。 基础信息：商家账号、店铺名称、是否自营（是/否）。 商家账号，选择未开店的会员。 店铺名称，2-30位字符，非空，不能重复。 是否自营：是、否。默认：否。 入驻信息：公司信息、营业执照信息、法人信息、结算银行信息。 公司信息：公司名称、公司所在地、公司详细地址、公司电话、员工人数、注册资金、联系人、联系人电话、邮箱。 公司名称：4-50位字符，非空。 公司所在地：调用地址选择器，非空。 公司电话：判断电话号码是否正确（包含400电话），非空。 员工人数：正整数，非空。 注册资金（万）：正整数，非空。 联系人：2-10字符，非空。 联系电话：11位手机号，非空。 邮箱：xx@xx.xx。 营业执照信息：营业执照号、营业范围、营业执照电子版。 营业执照号：18位字符，非空。 营业范围：1-300位字符，非空。 营业执照电子版：pdf、jpg、png、jpeg格式，非空。 法人信息：法人姓名、法人证件号、法人身份证电子版。 法人姓名：2-10位，非空。 法人证件号：18位数字，非空。 法人身份证电子版：pdf、jpg、png、jpeg格式，非空。 结算银行信息：开户名、账号、开户行名称、联行号、开户行所在地、开户许可证。 开户名：2-30位字符，非空。 账号：2-30位字符，非空。 联行号：2-20位数字，非空。 开户行所在地：调用地址选择器，必选。 开户许可证：pdf、jpg、png、jpeg格式，非空。 经营范围：选择店铺的经营范围（一级商品分类）。 结算信息：最多可添加5个结算日，当月不包含所设日期时，将会顺延到下一个结算日。 店铺审核 菜单路径 运营后台 > 店铺 > 店铺审核 展示平台内所有的店铺入驻申请分页列表。 对店铺入驻审核进行审核。 点击查看店铺详情，点击审核来确认是否要通过店铺审核。 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/店铺结算.html":{"url":"doc/使用文档/店铺结算.html","title":"店铺结算","keywords":"","body":"结算管理 店铺与平台按照结算单进行结算。 店铺结算单的生成规则是在：店铺详情中进行设置结算日。 每个月按照结算日生成结算单。例如写：1、15，每个月会生成两份结算单。 结算单流程：生成结算单 - 店铺对账 - 平台付款 - 完成。 结算方式为：线下支付。如果需要线上结算，自行去对接分账支付接口即可。 流程图 店铺结算单分页列表 展示平台内所有的店铺结算单分页列表。 店铺结算单分页列表：账单号、店铺名称、生成时间、结算时间段、结算金额、状态、操作（查看）。 点击\"详细\"，进入店铺结算单详情页面。 根据出账日期进行时间筛选。 店铺结算单详情 展示店铺结算单详情信息。 展示账单编号、商家名称、起止时间、出账日期、结算单状态。 结算金额=订单付款金额+积分结算金额+平台优惠券补贴+砍价商品结算金额+退单分销返现返还+退单产生退还佣金金额-退款金额-分销费用-平台收取佣金-退单平台优惠券补贴返还 以及有入账流水列表，退款流水列表 入账流水列表（入账时间，订单编号，订单金额，平台分佣，平台优惠券，平台优惠券补贴金额，分销金额，应结金额） 退款流水（退款时间，退款流水编号，订单编号，售后编号，退款金额，退还佣金，退还平台优惠券，退还分销，合计金额） © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/优惠券.html":{"url":"doc/使用文档/优惠券.html","title":"优惠券","keywords":"","body":"优惠券 优惠券分为：平台优惠券、店铺优惠券 优惠券分为主动领取、活动增送两种类型。 平台优惠券 菜单路径 运营后台 > 促销 > 促销管理 > 优惠券 优惠券列表 展示平台优惠券列表。 平台优惠券列表：优惠券名称、面额/折扣、领取数量/总数量、已被使用的数量/已领取数量、获取方式、优惠券类型、品类描述、活动时间、状态、操作（查看，查看领取记录，关闭优惠券，未开始的优惠券可以编辑） 批量关闭勾选中需要关闭的优惠券，点击批量关闭确认后关闭已勾选的优惠券。 点击关闭 确认后关闭对应的优惠券。 活动类型：免费领取、活动赠送。 免费领取：用户主动进入前台：优惠券列表进行领取。 活动赠送：优惠券配合优惠券活动发送至用户。 可根据优惠券名称，获取方式，活动状态，活动时间，进行搜索筛选。 新增平台优惠券 基本信息：活动名称、优惠券名称、优惠券类型、面额、活动类型、店铺承担比例、发放数量、领取数量限制、描述范围。 优惠券类型：满减、满折。 活动类型：免费领取、活动赠送。 店铺承担比例：数字，保留小数点两位，非空。店铺承担优惠金额比例。 使用限制：消费门槛、领取限制、有效期、使用范围、范围描述。 使用范围：全品类、指定商品、指定商品分类。 领取限制：如果领取限制为0时,则代表不限制领取数量。 新增店铺优惠券 菜单路径 店铺后台 > 营销 > 优惠券 业务描述 基本信息：活动名称、优惠券名称、优惠券类型、面额、活动类型、发送数量。 优惠券类型：满减、满折。 活动类型：免费领取、活动赠送。 使用限制：消费门槛、领取限制、有效期、使用范围、范围描述。 使用范围：全品类、指定商品、指定商品分类。 范围描述：优惠券描述内容 领取限制：如果领取限制为0时,则代表不限制领取数量。 优惠券领取记录 优惠券领取记录，可以查看到优惠券的领取记录（会员名称，优惠券名称，面额/折扣，使用门槛，会员优惠券状态，优惠券类型，品类描述，有效时间）。 可以通过优惠券名称，会员名称，优惠券状态，活动时间进行筛选领取优惠券记录。 常见问题 优惠券的活动类型：免费领取、活动赠送的区别是什么？ 答：优惠券有两种获取方式：主动领取、系统发放。 免费领取则是用户在前台进行领取的优惠券。 活动赠送则是系统发放的优惠券。 活动赠送的优惠券需要配合优惠券活动进行发放。 活动赠送的优惠券的有效期：固定时间是什么意思？ 答：固定时间：从领取之日起*天内有效。 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/优惠券活动.html":{"url":"doc/使用文档/优惠券活动.html","title":"优惠券活动","keywords":"","body":"优惠券活动 优惠券活动是由平台发起的优惠券活动。 优惠券活动中的优惠券需要先添加活动赠送类型的优惠券。 菜单路径 运营后台 > 促销 > 促销管理 > 券活动 优惠券活动列表 展示平台优惠券活动分页列表。 平台优惠券活动分页列表：活动名称、活动类型、活动范围、领取频率、活动时间、状态、操作（查看，关闭）。 活动类型：精确发券、注册赠券、自动增券。 活动范围：全部会员、指定会员。 状态：已开始、已结束、未开始。 自动赠券频率：每日一次，每周一次，每月一次。 关闭：点击后确认是否要关闭该券活动，确认后关闭该券活动 新增优惠券活动 活动信息：活动名称、活动时间、优惠券活动类型、活动范围。 优惠券活动类型：新人发券、精确发券。 活动时间：活动时间不能低于当前时间。 精确发券活动范围：全部会员、指定会员 自动赠券频率：每日一次，每周一次，每月一次。 配置优惠券：赠送的优惠券列表。 选择优惠券。 优惠券：优惠券名称、面额/折扣、已领取数量/总数量、已被使用数量/已领取数量、获取方式、优惠券类型、品类描述、活动时间。 可以通过优惠券名称，获取方式，活动状态，活动时间进行筛选优惠券。 赠送数量：此张优惠券赠送数量。 删除优惠券，点击后删除已添加的优惠券。 确认提交后生成该券活动 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/满额活动.html":{"url":"doc/使用文档/满额活动.html","title":"满额活动","keywords":"","body":"满额活动 满额活动是由店铺发布。 满额活动包含：满额减、满额折、满额包邮、满额送：积分、赠品、优惠券。 满额活动列表 菜单路径 运营后台 > 促销 > 促销管理 >满额活动 展示店铺设定的满额活动列表。 满额活动列表：活动名称、开始时间、结束时间、店铺名称、活动类型、活动状态、操作（查看、关闭/开启、已结束的可以删除）。 活动类型：满减、满折。 活动状态：未开始、已开始、已结束、已关闭。 可以根据活动名称，活动状态，活动时间进行联合搜索。 重置：点击重置可以使列表重置初始化。 满额活动详情 根据店铺设定的内容展示满额活动的内容。 基本信息：活动名称、活动时间、活动描述。 优惠设置：优惠门槛、优惠方式、优惠金额、额外赠送、使用范围、活动商品列表（展示商品的名、，商品价格、库存）。 发布满额活动 菜单路径 店铺后台 > 促销 > 商家活动 >满额活动。 满额活动由店铺进行添加，优惠金额由店铺承担。 基本信息：活动名称、活动时间、活动描述。 优惠设置：优惠门槛、优惠方式、优惠金额（折扣）、额外赠送、使用范围。 优惠方式：减现金、打折。 额外赠送：免邮费、送优惠券（当前存在的优惠券）、送赠品（店铺的商品）、送积分（指定的积分）。 使用范围：全品类（该店铺所有商品均可使用）、指定商品（指定的商品可以使用）。 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/秒杀活动.html":{"url":"doc/使用文档/秒杀活动.html","title":"秒杀活动","keywords":"","body":"秒杀活动 秒杀活动是由平台设置，每天都会发布秒杀活动。 店铺选择秒杀活动场次，参与秒杀活动。 秒杀活动设置 菜单路径 运营后台 > 促销 > 促销管理 > 秒杀活动 业务描述 设定每日开启的秒杀活动时间段。默认展示了24个时间段，选择时段即可。 系统会默认添加7天后的秒杀活动。 秒杀活动列表 展示平台发起的秒杀活动分页列表。 秒杀活动分页列表展示：活动名称、开始时间、申请截止时间、活动状态、申请规格、操作（编辑、管理、关闭、删除）。 秒杀活动管理 展示当前的秒杀活动信息。 管理秒杀活动下的商品。 秒杀活动商品分页列表展示：商品名称、规格、开始时间、结束时间、状态、操作（下架）。 参与秒杀活动管理 菜单路径 店铺后台 > 促销 > 平台活动 > 秒杀活动 选择秒杀活动以及活动场次，点击管理进行管理。 选择参与活动的商品。 秒杀活动商品列表：规格商品名称、原价格、活动价格、库存。 选择商品，调用商品规格选择器，只有能选择零售型的商品。 点击删除可以删除已选择的秒杀商品。 确认提交后点击提交。 待秒杀活动开始买家进行抢购。 常见问题 刚刚安装的系统如何添加秒杀活动呢？ 答：让开发同学通过swagger调用秒杀的初始化方法，会自动创建7天内的秒杀活动。 如何当天添加秒杀商品 答：无法在当天添加秒杀活动，只有在秒杀活动前一天进行添加。 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/拼团活动.html":{"url":"doc/使用文档/拼团活动.html","title":"拼团活动","keywords":"","body":"拼团管理 拼团促销活动由店铺发起。 拼团活动列表 菜单路径 店铺后台 > 营销 > 促销管理 > 拼团活动 商家可发起拼团活动，只有零售商品才可以参加活动。 拼团活动分页列表展示：活动名称、开始时间、结束时间、状态、操作（编辑、管理、删除、关闭/开启、查看）。 同一时间不可以发布多个拼团活动。 点击”新增拼团活动“，进入拼团活动新增页面。 点击”编辑“，进入拼团活动编辑页面。 点击”管理“，进入拼团活动商品维护页面。 点击”删除“，删除当前拼团活动。 活动开启后，可点击“关闭”将活动停止。关闭后的活动可以点击“开启”进行恢复。 新增拼团活动 新增拼团：活动名称、活动时间、参团人数、限购数量、虚拟成团、拼团规则。 活动名称：最多输入25个字符。 活动时间：开始时间、结束时间不能小于当前时间。 参团人数：参团人数不少于2人，不得超过10人。 限购数量：每人限购数量，如果设置为0则视为不限制购买数量。 虚拟成团：开启虚拟成团后，24小时人数未满的团，系统将会模拟匿名买家凑满人数，使该团成团。 拼团活动管理 设置当前拼团活动的商品，展示活动信息、拼团商品信息、选择商品。 拼团活动信息：活动名称、活动时间（起止时间）、活动结束时间、状态、 拼团活动商品列表：商品名称、规格、拼团价、库存、操作（删除）。 选择商品，调用商品规格选择器，只有能选择零售型的商品。 商品同一时间只能参与一个单品级活动：秒杀活动、拼团活动。 运营后台-拼团活动列表 菜单路径 运营后台 > 促销 > 拼团活动 业务描述 展示店铺提交的拼团活动分页列表。 拼团活动列表展示：店铺名称、活动名称、开始时间、结束时间、活动状态、操作（查看、关闭）。 点击“查看”，查看拼团活动详情。 点击“关闭”，关闭当前的拼团活动。 可根据活动名称、活动状态、活动时间进行筛选。 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/砍价活动.html":{"url":"doc/使用文档/砍价活动.html","title":"砍价活动","keywords":"","body":"砍价活动 砍价活动由平台发起。 砍价商品按照0元进行购买，砍价金额按照价格区间进行随机。 砍价活动列表 菜单路径 运营后台 > 促销 > 促销管理 > 砍价活动 列表展示：商品名称、库存数量、剩余活动库存、每人最低砍价、每人最高砍价、结算价格--平台给店铺结算的价格、活动开始时间、状态、操作（编辑、查看、删除）。 在活动未开始的状态下可以删除、修改，活动开始则无法修改活动。 可以通过商品名称，活动状态，活动时间进行联合搜索。 添加砍价活动 商品信息：商品名称，商品价格，库存（选择商品时回显对应商品的库存），结算价格（平台与店铺进行结算的价格），最低砍价-最高砍价（从砍价区间随机砍价），活动库存，操作（删除）。 同一时间内，同一商品（规格），不能重复参加活动。 砍价商品结算价：商品由店铺提供，平台选择店铺商品为砍价商品。平台与店铺按照此价格进行结算。 结算单 结算单详情增加砍价金额。 结算单数据的商品需按照砍价商品的结算价进行结算。 前台展示 展示砍价活动专区。 砍价商品有专属页面。 砍价商品页面：发起砍价、砍价记录， 被分享人进入页面提示按钮砍一刀。 被分享人协助砍价后，也可发起砍价（进入自己的砍价商品活动页面）。 砍价成功后，提示进行购买。 会员中心展示用户的砍价记录（发起人）。 砍价发起人可分享：微信、微信朋友圈至其他用户。 如果砍价活动在进行中，砍价发起人进入砍价商品页面自动匹配到他的活动页面。 砍价到0元进行购买。 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/小程序直播.html":{"url":"doc/使用文档/小程序直播.html","title":"小程序直播","keywords":"","body":"直播管理 直播对接的微信小程序直播。 直播间是由店铺进行创建。 买家可以在微信小程序的直播查看到正在进行的直播并查看。 直播列表 菜单路径 运营后台 > 促销 > 直播管理 > 直播管理 店铺可添加直播活动，直播使用的微信小程序直播。 平台可随时查看直播活动。 直播活动列表可按照直播中、未开始、已结束进行筛选。 直播列表展示：直播标题、主播昵称、直播开始时间、直播结束时间、是否推荐、直播状态、操作（查看）。 是否推荐：是否在首页轮播图中进行展示。 添加直播间 菜单路径 店铺后台 > 促销 > 直播活动 > 直播管理 由店铺添加直播间。 添加直播间之前需先将主播微信号添加到 微信直播人员（微信公众平台-直播-加上直播人员）中。 添加直播间：直播标题、直播昵称、直播时间、主播微信号（得进行实名认证才可以）、分享卡片封面、直播间背景墙、直播间分享图。 直播间详情 展示店铺添加的直播活动详情。 展示直播间信息：直播标题、主播昵称、直播时间、主播微信号、分享卡片封面、直播间背景墙、直播间分享图。 直播间商品列表。 直播间商品中前两个商品将自动被选为封面，伴随直播间在直播列表中显示。 直播商品列表 菜单路径 店铺后台 > 营销 > 直播活动 > 直播商品 展示店铺添加的直播商品列表。 直播商品列表展示：商品图片、商品名称、价格、库存、操作（查看） 添加直播商品 选择店铺内的规格商品，选择价格模式并设定直播商品价格。 价格模式：一口价、区间价、折扣价（展示的价格非真实的商品购买价格）。 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/积分商品.html":{"url":"doc/使用文档/积分商品.html","title":"积分商品","keywords":"","body":"积分商品 积分商品列表 菜单路径 运营后台 > 促销 > 积分活动 >积分商品 积分商品列表展示：商品名称、市场价、结算价、库存数量、活动剩余库存、兑换积分、所属店铺、活动开始时间、状态、分类、操作（编辑，删除，关闭） 可根据商品名称、积分区间、状态、商品SKU编码进行筛选。 添加积分商品 选择普通商品为积分商品。 积分商品：商品名称、sku编码、店铺名称。商品价格、库存、结算价格--平台给店铺的结算价格、分类--积分商品分类、活动库存、兑换积分--所需要兑换的积分、操作（删除）。 选择积分商品的开始时间与结束时间。 积分商品分类列表 菜单路径 运营后台 > 促销 > 积分活动 >积分分类 业务描述 展示积分商品分类列表。 积分商品分类列表展示：分类名称、操作（编辑、删除）。 可添加积分商品分类（设置分类名称、排序）。 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/楼层装修.html":{"url":"doc/使用文档/楼层装修.html","title":"楼层装修","keywords":"","body":"楼层装修 平台首页支持 可视化楼层装修。 同一时间只支持一个首页展示。 PC端首页装修 菜单路径 运营后台 > 运营 > 楼层装修 > PC端 页面楼层 目前预定好了9个楼层。 可设置用户点击楼层模块的操作。 切换禁用或者启用来禁用或者启用某一个楼层主页。 PC端-楼层内容选择器 设置楼层内容的操作。 操作种类：商品、店铺、分类、文章、专题、其他。 其他：首页、购物车、收藏商品、我的订单、个人中心、秒杀频道、领券中心、外部链接 删除：删除不需要的模块。 基础模块： 1.图片轮播 选择图片可以自行修改轮播图片、选择链接可以自行配置需要跳转的链接（商品、店铺、分类、文章、专题、其他）、删除可以删除改模块的轮播 2.热门广告 可以配置图片链接地址、选择图片 3.促销活动 秒杀商品需要在促销活动中添加商品，有商品时才会在首页展示。 4.折扣广告 可以配置图片链接地址、选择图片 5.好货推荐 标题：可以修改主标题名称，副标题名称，副标题链接，背景色。 商品内容：可以修改图片主标题，图片描述，建议尺寸，图片链接。 6.新品排行 标题：可以修改主标题名称，副标题名称，副标题链接，背景色。 商品内容：可以修改图片主标题，图片描述，建议尺寸，图片链接。 7.首页广告 广告首页包括图片主标题，图片描述，建议尺寸，图片链接，渐变背景色，渐变背景色，选择图片。 8.横幅广告 横幅广告包括图片链接，选择图片。 9.还没逛够 标题：主标题，描述，操作（删除）。 商品：可以配置商品跳转到指定商品。 移动端首页管理 菜单路径 运营后台 > 运营 > 楼层装修 > 移动端 导航栏 设置移动端首页导航栏的选项。 点击模板可在右侧进行导航栏新增、编辑、删除、操作等操作。 一行展示五个导航栏，超出在下一行进行展示。 点击“新增”，新增导航栏设置。设置导航栏：名称、图标（200px\\200px）、操作（楼层内容选择器）。 点击“编辑”，设置当前的导航栏。可修改名称、图标、操作（楼层内容选择器）。 点击“删除”，提示是否删除此模块。 移动模块，可在楼层右侧直接拖动楼层，设置它的展示顺序。 基础模块 1.图片 可以更换图片，配置对应的链接（楼层内容选择器） 热区：可以手动绘制模块跳转，对应的模块跳转到对应的配置 2.轮播图 轮播图配置轮播图片，选择链接（楼层内容选择器），更换排序顺序，删除多余模块。 3.标题栏 标题栏包括文字对齐方式，背景颜色，菜单标题，标题颜色，小标题，小标题颜色，选择链接（楼层内容选择器）。 4.广告魔方 支持多个多图的楼层选择：左一右二、左二右一、一行三图、一行四图、一行五图。 左一右二：左侧图片（320/210）、右侧图片（160/210）。 左二右一：左侧图片（160/210）、右侧图片（320/210）。 一行三图：每个图片（213/260）。 一行四图：每个图片（160/210）。 一行五图：每个图片（128*128）。 点击模板可在右侧进行图片，编辑、删除、操作等操作。 点击“编辑”，设置当前的图片。可修改图片、操作（楼层内容选择器）。 点击“删除”，提示是否删除此模块。 移动模块，可在楼层右侧直接拖动楼层，设置它的展示顺序。 5.宫格导航 可以配置对应的图片，菜单标题，配置链接（楼层内容选择器），添加新模块，删除模块。 6.搜索 可以配置搜索默认的菜单标题 7.商品分类 可以配置商品类型的标题，描述，绑定对应的商品，或者绑定商品分类，可以删除对应的模块。 提示： 如果当前装修模块不是最后一项模块且模块内容绑定为分类，则会默认展示绑定分类的100条商品信息。 如果当前装修模块是最后一项模块且模块内容绑定为分类，则会默认会根据绑定分类触底加载商品信息。 如果当前装修内容不为分类，则会展示当前商品的静态信息。 8.公告 可以配置公告的背景颜色，方向，标题颜色，公告内容。 9.促销活动 可选择拼团活动，直播活动，秒杀活动，砍价活动，最多选择两种促销活动。 活动内容可以配置背景颜色，菜单标题，小标题，小标题颜色。 移动端端-楼层内容选择器 设置点击楼层的操作 操作种类：商品、店铺、分类、文章、活动、专题、其他。 活动：拼团、砍价、积分商品 其他：首页、购物车、收藏商品、我的订单、个人中心、拼团频道、秒杀频道、领券中心、签到、小程序直播、砍价、积分商城。 配置对应的链接，跳转到对应的内容。 专题 支持设置多个专题页面。 专题的功能与楼层装修的功能一致。 添加专题后将专题内嵌到链接里面（楼层内容选择器）。 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/隐私协议.html":{"url":"doc/使用文档/隐私协议.html","title":"隐私协议","keywords":"","body":"隐私协议 隐私协议功能 是用于维护前台用户展示的协议相关内容。 菜单路径 运营后台 > 运营 > 隐私协议 > 隐私协议 隐私协议维护 协议包含：店铺入驻协议、用户协议、证照信息、关于我们、隐私策略。 编辑即可维护相关的协议内容。 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/用户分销.html":{"url":"doc/使用文档/用户分销.html","title":"用户分销","keywords":"","body":"用户分销 分销为一级分销。 分销绑定关系并非永久。 新的分销绑定关系会覆盖之前的分销层级关系。 分销设置 菜单路径 运营后台 > 运营 > 分销管理 > 分销设置 分销为1级分销。 设置分销业务是否开启。 分销关系绑定天数：设定上下级关系绑定天数。 分销结算天数：订单完成后，开始计算分销佣金天数。 分销商列表 菜单路径 运营后台 > 运营 > 分销管理 > 分销员 展示分销商分页列表。 分销商分页列表展示：会员名称、推广单数、分销金额、可用金额、冻结金额、状态、操作（清退、恢复）。 清退后的分销商，保留原有的分销层级。 点击“查看”，进入分销商详情页面。 点击“清退”，提示是否确认当前操作。清退后分销商无法在前台发起分销，清退后分销的订单无提佣。 点击“恢复”，将清退的分销商进行恢复。 可根据会员名称、状态进行筛选。 分销申请 菜单路径 运营后台 > 运营 > 分销管理 > 分销申请 展示用户的分销商申请分页列表。 分销商申请分页列表展示：会员名称、提交申请时间、操作（同意、拒绝）。 点击“同意”，通过申请，用户成为分销商。 点击“拒绝”，拒绝用户分销商申请，用户需在前台进行重新提交。 可以通过会员名称进行搜索。 分销商品 菜单路径 运营后台 > 运营 > 分销管理 > 分销商品 展示商家设定的分销商品分页列表。 分销商品分页列表展示：商品缩略图、商品名称、商品价格、库存、店铺名称、添加时间、佣金金额、操作（下架）。 点击“下架”，将分销商品进行下架处理。 可根据商品名称进行筛选。 勾选需要下架的分销商品，点击批量下架可以批量下架分销商品。 分销订单 菜单路径 运营后台 > 运营 > 分销管理 > 分销订单 生成分销订单后，会将佣金添加到分销员的冻结佣金中。 展示平台所有分销订单分页列表。 分销商品分页列表展示：订单编号、商品信息、分销商名称、店铺名称、状态、佣金金额、创建时间、商品二维码。 可根据订单编号、分销商、店铺名称、订单时间进行筛选。 分销提现 菜单路径 运营后台 > 运营 > 分销管理 > 分销提现 用户提交分销提现申请，分销提现成功后金额到用户的预存款中。 分销提现列表展示：编号、会员名称、申请金额、申请时间、处理时间、状态，操作（查看）。 点击查看可以查看到编号，会员名称，金额。 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/搜索热词.html":{"url":"doc/使用文档/搜索热词.html","title":"搜索热词","keywords":"","body":"搜索热词 搜索热词：设置以及查看用户前台搜索的 热门词汇。 菜单路径 运营后台 > 运营 > 文章设置 > 搜索热词 设置热词 热词默认配置： 热词每天会进行清空，所以平台需要设置默认的热词词汇。 热词：搜索词汇。 分数：默认搜索频率（次数）。 每日持久化热词数量： 设置每日保存的搜索词汇的数量。 建议设置10-50，不要设置太大，会占用数据库。 今日热词 按照顺序展示今日用户的搜索热词。 点击热词可以看到热词列表，点击分数（可以为负数）可以设置词语的搜索次数，默认前5的热词在前端展示，分数越高的展示在买家的搜索越靠前。 不存在的热词也可以保存，即为新增热词。 分数：搜索次数。 可以删除想要删除的热词，用户那端也会删除。 历史热词 展示指定日期的热词。 可以通过日期进行筛选 热词统计 可选择展示数量，可以选择统计区间或者某年某月，展示热词即搜索频率。 可以通过日期，搜索次数进行筛选。 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/文章分类.html":{"url":"doc/使用文档/文章分类.html","title":"文章分类","keywords":"","body":"文章分类 菜单路径 运营后台 > 运营 > 文章管理 > 文章分类 文章分类分页列表 文章分类列表展示：文章分类名称、操作（编辑、删除）。 点击“删除”，判断当前文章分类下是否有文章，如果有文章提示“当前文章下有文章，不能进行删除”。 点击“编辑”，进行编辑文章分类。 添加子分类添加该分类的子级分类，子级分类可以编辑与删除。 新增文章分类 进行文章分类新增。需要设置：文章分类名称。 文章分类名称：2-20字符，非空。 点击“取消”，关闭当前弹窗。 点击“提交”，进行文章分类新增。 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/文章管理.html":{"url":"doc/使用文档/文章管理.html","title":"文章管理","keywords":"","body":"文章列表 菜单路径 运营后台 > 运营 > 文章管理 > 文章管理 文章分页列表 文章分页列表默认显示所有的文章，按照添加时间顺序排列表。 文章分页列表展示：文章标题、文章分类、排序、发布时间、显示、操作（编辑、删除）。 点击“新增”，进行文章新增页面。 点击“编辑”，进入当前的文章编辑页面。 点击“删除”，对当前的文章进行删除。 可根据文章标题进行关键字搜索，最多可输入20个字符。 新增文章 进行文章新增：文章标题、文章分类、文章排序、文章内容。 文章标题：2-50字符，非空。 文章分类：根据文章分类进行选择，必选。 文章排序：0-999，默认0，正整数，非空。 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/意见反馈.html":{"url":"doc/使用文档/意见反馈.html","title":"意见反馈","keywords":"","body":"意见反馈 用户可填写反馈的内容、凭证图片、手机号（非必填）。 平台展示会员名称，手机号码，反馈内容，类型，创建时间，操作（查看）。 点击查看查看详细信息（用户名，手机号码，类型，反馈内容，相关材料）。 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/短信管理.html":{"url":"doc/使用文档/短信管理.html","title":"短信管理","keywords":"","body":"短信管理 短信管理是用于给用户发送指定的短信使用的。 短信对接的是阿里云 菜单路径 运营后台 > 运营 > 短信管理 > 短信 短信签名 展示签名名称，申请说明，状态，操作（编辑，删除）。 短信对接的是阿里云，签名也是由阿里云进行审核。 同步：同步添加的短信签名在阿里云的审核状态。 短信模板 展示模板code，模板名称，模板内容，状态，操作（编辑，删除）。 短信对接的是阿里云，签名也是由阿里云进行审核。 同步：同步添加的短信模板在阿里云的审核状态。 发送任务列表 发送任务列表：模板名称、签名、短信内容、预计发送条数、操作（详情）。 添加短信发送任务，选择短信签名，短信模板，短信内容，选择发送接收人。 常见问题 1.短信对接的哪个平台？ 答：阿里云 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/会员统计.html":{"url":"doc/使用文档/会员统计.html","title":"会员统计","keywords":"","body":"会员统计 菜单路径 运营后台 > 统计 > 统计 > 会员统计 会员统计图 展示今日、昨日、最近七日、最近三十日的会员统计。 客户增长趋势：点击显示/关闭用户总人数，来切换当前统计图展示。 客户增长报表：展示日期，当前会员，新增会员，活跃会员。 展示总会员数量以及每日新增的会员数量。 可以通过时间段进行筛选。 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/订单统计.html":{"url":"doc/使用文档/订单统计.html","title":"订单统计","keywords":"","body":"订单统计 菜单路径 运营后台 > 统计 > 统计 > 订单统计 订单统计图 展示今日、昨日、最近七日、最近三十日的会员统计。 展示每日的UV、订单数量、付款数量。 展示订单的转换率。 交易趋势图。 展示订单统计趋势图。 订单退款统计图。 展示退单的：商家名名称，用户名，订单状态，创建时间，支付时间，价格，操作（查看）。 点击查看查看订单的详情内容。 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/商品统计.html":{"url":"doc/使用文档/商品统计.html","title":"商品统计","keywords":"","body":"商品统计 菜单路径 运营后台 > 统计 > 统计 > 商品统计 商品统计图 展示今日、昨日、最近七日、最近三十日的商品统计。 展示热卖的商品可按照时间段进行筛选。 切换热门商品订单数量，热门商品订单金额，展示对应的列表（商品名称，销售数量，销售金额）。 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/流量统计.html":{"url":"doc/使用文档/流量统计.html","title":"流量统计","keywords":"","body":"流量统计 菜单路径 运营后台 > 统计 > 统计 > 流量统计 流量统计图 展示今日、昨日、最近七日、最近三十日的流量统计。 展示每日的UV数量，PV数量。 展示流量趋势 会员流量报表 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/管理员管理.html":{"url":"doc/使用文档/管理员管理.html","title":"管理员管理","keywords":"","body":"管理员管理 菜单路径 运营后台 > 设置 > 系统设置 > 用户管理 管理员管理 展示后台的管理员列表。 管理员列表：管理员名称、权限、操作（编辑、删除） 新增管理员需要设置：管理员名称、密码、头像、权限（可多选）。 勾选用户可以批量删除，或者批量重置密码（重置的密码都为123456）。 用户绑定了对应的部门与角色，来使用该部门与角色的权限。 添加用户 添加用户：设置用户名、昵称、密码、邮箱、手机号、头像、部门、角色。 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/部门管理.html":{"url":"doc/使用文档/部门管理.html","title":"部门管理","keywords":"","body":"部门管理 菜单路径 运营后台 > 设置 > 用户管理 > 部门管理 展示部门列表，可对部门进行新增、修改。 部门可以绑定角色，用于管理后台菜单的权限划分。 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/权限管理.html":{"url":"doc/使用文档/权限管理.html","title":"权限管理","keywords":"","body":"权限管理 菜单路径 运营后台 > 设置 > 系统设置 > 支付设置 权限管理 展示后台的权限列表。 权限列表：权限名称、操作（编辑、删除）。 如果当前权限有管理员使用则无法删。 权限精确到菜单。 菜单权限 菜单权限编辑可以一键选择编辑菜单权限，或者一键查看菜单权限。也可以单选。 保存后可以绑定部门等实现菜单权限-- 如果选择的是编辑权限即可以编辑，查看只能查看，如果未勾选的则不展示。 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/菜单管理.html":{"url":"doc/使用文档/菜单管理.html","title":"菜单管理","keywords":"","body":"菜单管理 菜单路径 运营后台 > 设置 > 用户管理 > 菜单管理 菜单管理 展示后台的菜单列表，可对菜单进行新增以及修改。 一般由开发人员去配置菜单。 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/系统设置.html":{"url":"doc/使用文档/系统设置.html","title":"系统设置","keywords":"","body":"系统管理 菜单路径 运营后台 > 设置 > 系统设置 > 系统设置 基础信息 设置网站名称、ICP、前台LOGO、商家中心LOGO、平台后台LOGO、站点地址、wap站点地址。 商品设置 商品是否需要审核 设置图片尺寸：大图、小图、缩略图。 重新生成索引：重新生成商品索引。 订单设置 设置订单超时设置：X分钟取消订单、X天自动收货、X天订单自动完成、X天订单自动评价、X天订单售后自动取消。 订单自动取消：发起订单后，多少分钟未操作取消订单。 订单自动收货：发货后多少天自动完成收货。 自动好评：订单发货后，多少天后自动好评。 已完成订单允许退单：订单完成后，多少天内允许退单，如果天数为0,则不允许退单。 已完成订单允许投诉：订单完成后，多少天内允许投诉，如果天数为0,则不允许投诉。 积分设置 登录赠送积分、注册赠送积分、下单赠送积分、订单评价赠送积分。 签到可获取积分，连续签到X天可获取X积分（可设置多份） 客服配置 配置云im客服地址。 快递信息、电子面单 设置快递鸟参数。 快递鸟参数设置文档 短信设置 设置阿里云短信参数 阿里云短信参数设置文档 阿里OSS设置 设置阿里云OSS储存参数 阿里云OSS参数设置文档 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/OSS资源.html":{"url":"doc/使用文档/OSS资源.html","title":"OSS资源","keywords":"","body":"OSS静态资源 OSS资源列表 菜单路径 运营后台 > 设置 > 系统设置 > OSS资源 展示OSS资源列表。 OSS资源列表展示：原文件名称、储存文件名称、缩略图、文件类型、文件大小、上传者、上传时间、操作（下载、重命名、删除）。 点击上传文件选择本地文件进行上传。 点击刷新刷新列表。 勾选需要删除的oss图片点击批量删除进行批量删除操作。 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/行政地区.html":{"url":"doc/使用文档/行政地区.html","title":"行政地区","keywords":"","body":"行政地区 菜单路径 运营后台 > 设置 > 系统设置 > 行政地区 行政地区 同步用于第一次同步行政地区点击后可以自动配置 展示平台所有的平台的地区数据。 地址层级为四级。 如果有未同步到的地址，可以通过右侧（区域代码，城市代码，行政区划级别，经纬度，名称，排序）进行添加。 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/物流公司.html":{"url":"doc/使用文档/物流公司.html","title":"物流公司","keywords":"","body":"物流公司 菜单路径 运营后台 > 设置 > 系统设置 > 物流公司 物流公司列表 展示所有物流公司列表。 列表展示：物流公司名称、快递公司源码、状态、创建时间、操作（修改、删除）。 物流公司添加 填写物流公司名称，物流公司代码，支持电子面单，电子面单表单，是否禁用。 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/微信消息.html":{"url":"doc/使用文档/微信消息.html","title":"微信消息","keywords":"","body":"微信消息 公众号的消息在微信公众平台配置模板消息 小程序消息需要在微信公众平台配置订阅消息模板 微信消息列表 微信消息列表是公众号的消息（模板编号，是否开启，模板名称，创建时间，操作（编辑，删除））。 编辑包括（模板名，头部消息，备注）。 同步微信消息点击后可以同步到微信的模板消息。 微信小程序订阅消息 微信小程序订阅消息是小程序的消息（模板编号，是否开启，模板名称，创建时间，操作 （编辑，删除））。 编辑包括（是否开启）。 同步微信小程序订阅消息可以同步到小程序的模板。 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/敏感词.html":{"url":"doc/使用文档/敏感词.html","title":"敏感词","keywords":"","body":"敏感词设置 菜单路径 运营后台 > 设置 > 系统设置 > 敏感词 敏感词管理 设置系统需要过滤的敏感词分页列表。 敏感词分页列表展示：敏感词名称、创建时间、更新时间、操作人、操作（修改，删除）。 敏感词内容将被替换为XXX。 目前敏感词用于用户评价内容。 点击”新增“，对敏感词进行新增。 点击”删除“，对敏感词进行删除。 敏感词会有半个小时缓存生效时间，添加后半小时生效。 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/APP版本.html":{"url":"doc/使用文档/APP版本.html","title":"APP版本","keywords":"","body":"APP版本 菜单路径 运营后台 > 设置 > 系统设置 > APP版本 APP版本列表 1.展示APP的版本列表。 2.列表展示：版本名称、版本号、更新/强制、类型、更新时间、操作（查看）。 3.系统类型：苹果、安卓。 添加后移动端首页进行展示。 APP版本添加 填写版本名称，版本号，更新时间，是否强制更新，系统类型，下载地址，更新内容。 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/日志管理.html":{"url":"doc/使用文档/日志管理.html","title":"日志管理","keywords":"","body":"日志管理 菜单路径 运营后台 > 日志 > 系统监控 > 日志管理 日志列表 展示系统日志的分页列表。 系统日志的分页列表展示：操作名称、日志内容、操作用户、操作时间。 可根据日志内容、操作人、操作时间进行筛选。 可以切换展示详细内容（普通/开发） 开发展示：操作名称，日志内容，操作用户，ip地址，ip信息，请求路径，请求类型，请求参数，请求用时，操作时间。 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/IM详细说明.html":{"url":"doc/使用文档/IM详细说明.html","title":"IM详细说明","keywords":"","body":"IM 项目介绍 前端代码： https://gitee.com/beijing_sellwell/sellwell-ui/tree/master/im 后端代码 https://gitee.com/beijing_sellwell/sellwell/tree/master/im-api 启动IM IM-API 1、打开API项目：https://gitee.com/beijing_sellwell/sellwell/tree/master/im-api 2、修改配置文件：https://gitee.com/beijing_sellwell/sellwell/blob/master/im-api/src/main/resources/application.yml (PS:修改数据库，redis，elasticsearch等连接配置) 3、mvn打包，然后启动jar包。 成功启动后访问：http://localhost:8885/doc.html#/home 正常启动则进行下一步，否则自行调试一下 IM-UI 1、修改配置文件 测试环境：https://gitee.com/beijing_sellwell/sellwell-ui/blob/master/im/.env.development 生产环境：https://gitee.com/beijing_sellwell/sellwell-ui/blob/master/im/.env 参数说明： NODE_ENV=development #默认值无需修改 VUE_APP_PREVIEW=false #默认值无需修改 VUE_APP_API_BASE_URL=https://im-api.sellwell.cn #IM API地址 VUE_APP_WEB_SOCKET_URL=wss://im-api.sellwell.cn/lili/webSocket # IM API websocket地址，http/https 对应 ws/wss 协议 VUE_APP_COMMON=https://common-api.sellwell.cn #通用接口API地址，COMMON-API VUE_APP_BUYER=https://buyer-api.sellwell.cn #买家API地址 VUE_APP_SELLER=https://store-api.sellwell.cn #商家API地址 VUE_APP_WEBSITE_NAME=\"LiLi IM\" #IM 站点名称 VUE_APP_PC_URL=https://pc-b2b2c.sellwell.cn/#买家UI地址 VUE_APP_PC_STORE=https://store-b2b2c.sellwell.cn/ #商家UI地址 本地运行参数示例 NODE_ENV=development VUE_APP_PREVIEW=false VUE_APP_API_BASE_URL=http://127.0.0.1:8885 VUE_APP_WEB_SOCKET_URL=ws://127.0.0.1:8885/lili/webSocket VUE_APP_COMMON=http://127.0.0.1:8890 VUE_APP_BUYER=http://127.0.0.1:8888 VUE_APP_SELLER=http://127.0.0.1:8889 VUE_APP_WEBSITE_NAME=\"LiLi IM\" VUE_APP_PC_URL=http://127.0.0.1:10000 VUE_APP_PC_STORE=https://127.0.0.1:10002 Copy 管理端配置IM地址 路径：管理后台 > 系统设置 > 客服设置 云IM地址：配置IM-UI的地址，本地环境默认端口8000 示例配置 http://127.0.0.1:8000 移动端IM配置 移动端配置--imWebSrc与baseWsUrl https://e.gitee.com/beijing_sellwell/repos/beijing_sellwell/sellwell-uniapp/blob/master/config/config.js 以及配置IM-API https://e.gitee.com/beijing_sellwell/repos/beijing_sellwell/sellwell-uniapp/blob/master/config/api.js 微信小程序IM配置 微信小程序在配置完移动端的前提下，微信小程序需要在服务区域名下socket配置IM WS 地址 配置完成后微信小程序即可使用im 路径 微信公众平台 > 开发管理 > 开发设置 使用IM 1、前往商家端，首页点击 （点击登录客服） 按钮，跳转至客服页面 2、前往买家端，搜索店铺商品，点击商品页面右上角的联系客服按钮，与客服进行沟通 3、移动端/微信小程序,点击商品详情的客服，与客服进行沟通 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "},"doc/使用文档/供应商.html":{"url":"doc/使用文档/供应商.html","title":"供应商","keywords":"","body":"供应商 菜单路径 运营后台> 店铺 > 微信进件 流程图 服务商进件 1.选择服务商类型 服务商类型包括(小微商家，个体卖家，个体工商户，企业，事业单位，社会组织，政府机关) 2.主体资料 主体资料根据不同主体类型填写不同的主体资料 主体资料包括(主体类型，代理商名称，是否是金融机构) 营业执照/登记证书信息(登记证书类型，营业执照照片/登记证书照片，注册号/统一社会信用代码，商户名称，个体户经营者/法人姓名，注册地址，有效期限开始日期，有效期结束日期) 经营者/法人身份证件(证件持有人类型，证件类型，证件正面照片，证件反面照片，证件姓名，证件号码，证件居住地址，证件有效开始时间，证件有效期结束时间) 3.超级管理员信息 超级管理员信息包括(超级管理员类型，超级管理员姓名，联系手机，联系邮箱) 4.店铺信息 店铺信息(店铺名称，店铺链接，店铺二维码，小程序AppID) 5.结算账户信息 结算账户信息(账户类型，开户银行，省市编码，开户名称，联行号，全称（含支行），银行账户) 6.补充材料 补充材料包括(补充材料，特殊资质图片，补充说明) 微信供应商由微信进行审核一般审核时间7-8个工作日 创建店铺需要填写对应的二级商户id，填写完后买家才可以购买对应店铺的商品 供应商结算 根据供应商id进行结算 供应商结算 由创建店铺时选择的店铺结算时间结算店铺，店铺进行对账后的后一天执行供应商结算的定时器任务，给对应的商户结算 © snowdreams1006 all right reserved，powered by Gitbook文件修订时间： 2024-05-19 10:05:05 "}}